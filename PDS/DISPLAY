DISPLAY  QSTART 'QUEUE COMMAND - 3270 DISPLAY ROUTINES'
***********************************************************************
* RNB CHANGES:                                                        *
*     (1) RNB13 - MODIFICATIONS TO FIX PROBLEMS WITH TCAM FULL-SCREEN *
*                 PROCESSING OF TEST-REQUEST, SYSTEM REQUEST, AND THE *
*                 PA2/PA3 KEYS.                                       *
*     (2) RNB14 - MODIFICATIONS TO FIX PROBLEMS FULL-SCREEN           *
*                 PROCESSING. THIS ONE ALLOWS THE USER TO TYPE IN THE *
*                 TOP COMMAND LINE WITHOUT QUEUE MISINTERPRETING WHAT *
*                 WAS ENTERED. (TRY THE DO COMMAND FROM BOTH PLACES   *
*                 WITHOUT THE MOD TO SEE THE EFFECT.)                 *
*     (3) RNB15 - RESTORE PFK DEFINITIONS FOR PF7 AND PF8 TO ORIGINAL *
*                 ICBC VALUES OF -27 AND +27. WE DON'T HAVE THE OTHER *
*                 3278 MODELS, AND PARTIAL SCROLLING IS EASIER AND    *
*                 MORE SPF CONSISTENT WITH THE ORIGINAL VALUES. ONLY  *
*                 IF QRNB=1.                                          *
***********************************************************************
         GBLB  &QPFK          PF-KEY OPTION. DEFINED BY QSTART     ICBC
         GBLB  &QRNB                                              RNB13
         USING QDISPLAY,R10   BASE REG FOR DISPLAY WORK AREA
         L     R10,QVDSPL     ADDR OF DISPLAY WORK AREA
         USING QCPRINT,R9     BASE REG FOR PRINT   WORK AREA       FCI*
         L     R9,QVPRINT     ADDR OF PRINT   WORK AREA            FCI*
***********************************************************************
*                                                                     *
*   CHECK FOR ROOM ON SCREEN                                          *
*                                                                     *
***********************************************************************
         MVI   QDOVER,0       ZERO OUT THE PAGE OVERFLOW INDICATOR
         L     R1,QDPLUS@     POINT TO PLUS SIGN POSITION         GP@P6
         MVI   0(R1),C' '     BLANK THE OVERFLOW INDICATOR        GP@P6
         LH    R4,QDMLNG      LOAD MSG LENGTH
         C     R4,QDSCRLEN    IS THE MSG LENGTH > SCRSIZE?  GP@P6 UF003
         BH    RETURN         YES. GO AWAY.
         MVC   QPRSAVE,QDTLINE        SAVE SUBTITLE LINE ON ENTRY  FCI*
         LTR   R4,R4          IS MSG LENGTH ZERO?
         BZ    WRTSCR         YES. WRITE SCREEN.
         MVI   0(R1),C'+'     INDICATE SCREEN OVERFLOW            GP@P6
         AH    R4,QDNEXT      ADD CURRENT LOCATION ON SCREEN
         C     R4,QDSCRLEN    IS THERE ROOM ON THE SCREEN?  GP@P6 UF003
         BH    WRTSCR         NO. WRITE SCREEN.
***********************************************************************
*                                                                     *
*   MOVE THE MESSAGE TO THE SCREEN                                    *
*                                                                     *
***********************************************************************
DSP2     LH    R7,QDMLNG      LOAD MESSAGE LENGTH
         LTR   R7,R7          IS MESSAGE LENGTH ZERO?
         BZ    RETURN         YES. RETURN.
         LH    R4,QDNEXT      LOAD CURRENT SCREEN LINE NUMBER
         LR    R1,R4          SAVE LINE NUMBER
         A     R4,QDLINE1@    LOAD ADDRESS OF NEXT LINE           GP@P6
         L     R6,QDMSGA      LOAD ADDR OF MESSAGE
         LH    R5,QDLNELEN    LENGTH MUST BE MULTIPLE OF LINESIZE UF003
DSP3     CR    R5,R7          IS 5 NOT LESS THAN 7?
         BNL   DSP4           YES. GO DO IT.
         AH    R5,QDLNELEN    INCR BY LINE LENGTH                 UF003
         B     DSP3           TRY AGAIN
DSP4     AR    R1,R5          UPDATE LINE NUMBER
         STH   R1,QDNEXT      STORE LINE NUMBER
         LR    R14,R4         SAVE TARGET ADDRESS                 GP@P6
         LR    R15,R5         SAVE TARGET LENGTH                  GP@P6
         MVCL  R4,R6          MOVE THE MESSAGE TO THE SCREEN
         LR    R4,R14         COPY TARGET ADDRESS                 GP@P6
         LA    R6,QDSCRTXT    POINT TO PRIMARY BUFFER             GP@P6
         SR    R14,R6         GET TARGET SCREEN LOCATION          GP@P6
         A     R14,QDSHADO@                                       GP@P6
         ICM   R7,8,QDLNCODE  GET SHADOW DISPLAY CODE             GP@P6
         LR    R5,R14         SAVE TARGET ADDRESS                 GP@P6
         MVCL  R14,R6         PROPAGATE DISPLAY CODE IN SHADOW    GP@P6
         CLI   0(R4),X'0B'    HIGH INTENSITY INPUT FIELD?         GP@P6
         BNE   RETURN         NO                                  GP@P6
         MVI   1(R5),X'01'    YES, SHOW LEADER DOT IN BLUE        GP@P6
         CLI   10(R4),X'0B'   HIGH INTENSITY INPUT FIELD?         GP@P6
         BNE   RETURN         NO                                  GP@P6
         MVI   11(R5),X'02'   YES, SHOW JOB CLASS IN RED          GP@P6
         CLI   13(R4),X'06'   YELLOW DISPLAY LINE?                GP@P6
         BE    RETURN         YES, LEAVE CLASS IN RED             GP@P6
         MVI   11(R5),X'04'   NO, SHOW JOB CLASS IN GREEN         GP@P6
***********************************************************************
*                                                                     *
*   RETURN TO CALLER                                                  *
*                                                                     *
***********************************************************************
RETURN   QSTOP
***********************************************************************
*                                                                     *
*   WRITE A FULL SCREEN, WAIT FOR REPLY                               *
*            (TRANSLATE OF UNDISPLAYABLES NOW DONE IN Q15 - GP@P6)    *
***********************************************************************
WRTSCR   L     R1,QDPLUS@     NO, POINT TO PF3 MEANING INDICATOR  GP@P6
         MVC   1(7,R1),QBLANK CLEAR PF3 MEANING OVERRIDE LABEL    GP@P6
         TM    QFLAG1,QFLG1HLP  IN HELP WITH VALID DATA SET?      GP@P6
         BNO   WRTHLPOK       NO                                  GP@P6
         MVC   2(6,R1),=C'PF3=+0'                                 GP@P6
         B     WRTLEVEL       YES, LEVEL 2 SO PF3 IS "EXIT HELP"  GP@P6
WRTHLPOK CLI   PF3LEVEL+1,1   ANY COMMAND LEVELS STACKED?         GP@P6
         BL    WRTLEVEL       NO, DISPLAY TEXT NOW READY          GP@P6
         MVC   2(6,R1),=C'PF3=DD'                                 GP@P6
         BH    WRTLEVEL       YES, LEVEL 2 SO PF3 MEANS 'DD'      GP@P6
         MVC   6(2,R1),PF3CMD1     LEVEL 1 SO SHOW ACTUAL MEANING GP@P6
WRTLEVEL L     R15,=V(BLD3270)                                    GP@P6
         BALR  R14,R15        GO CONSTRUCT 3270 DATA STREAM       GP@P6
         SPACE 1                                                  UF003
TPUTSCRN DS    0H                                                 UF003
         L     R0,QDLENGTH    LOAD LENGTH FOR TPUT          GP@P6 UF003
         L     R1,QDCBPRM4    POINT TO DATA STREAM                GP@P6
         MVC   1(1,R1),QDSCRO1 COPY EW OR EWA COMMAND             GP@P6
         TM    QFLAG1,QFLG1RSH                                    GP@P6
         BO    RESHOWOK       LEAVE EW OR EWA FOR RESHOW          GP@P6
         MVI   1(R1),X'F1'    REPLACE COMMAND WITH ORDINARY WRITE GP@P6
RESHOWOK CLC   QDSCRPLN,=F'4096'                                  GP@P6
         BNH   TPUTFLSC       TPUT FULLSCR IS SUFFICIENT          GP@P6
         LA    R15,1(,R1)     SKIP ESCAPE - POINT TO VTAM COMMAND GP@P6
         BCTR  R0,0           DECREMENT DATA STREAM LENGTH        GP@P6
         OI    1(R15),X'02'   SET WCC TO UNLOCK KEYBOARD          GP@P6
         TPUT  (15),(0),NOEDIT,MF=(E,QTPUT) NOEDIT FOR 14-BIT ADR GP@P6
         B     TPUTDONE       TPUT HAS NOW BEEN ISSUED            GP@P6
TPUTFLSC ICM   R1,8,=X'03'    LOAD FLAGS FOR FULLSCR              GP@P6
         TPUT  (1),(0),R      DISPLAY NEW SCREEN IMAGE            GP@P6
TPUTDONE MVC   QDTLINE,QPRSAVE        RESTORE SUBTITLE INFO        FCI*
         AIF  (&QPFK).PFK1    SKIP NON-PFK CODE                    ICBC
         LA    R1,QDREPLY     POINT TO INPUT BUFFER               GP@P6
         LA    R0,L'QDREPLY   GET INPUT BUFFER LENGTH             GP@P6
         ICM   R1,8,=X'80'    SET FLAGS FOR TGET EDIT             GP@P6
         TGET  (1),(0),R      READ TERMINAL INPUT                 GP@P6
         STH   R1,QDRLNG      STORE LENGTH OF REPLY
         CH    R15,=H'12'     IS INPUT LONGER THAN BUFFER?
         BNE   NOCLEAR        NO. CONTINUE.
         TCLEARQ INPUT        CLEAR THE QUEUE
NOCLEAR  DS    0H
         AGO   .PFK2                                               ICBC
.PFK1    ANOP                                                      ICBC
         LA    R6,QDREPLY                                          ICBC
         XC    PFREPLY,PFREPLY                                     ICBC
         XC    QDREPLY,QDREPLY                                     ICBC
         LA    R1,PFREPLY     POINT TO INPUT BUFFER               GP@P6
         LA    R0,L'PFREPLY   GET INPUT BUFFER LENGTH             GP@P6
         ICM   R1,8,=X'81'    SET FLAGS FOR TGET ASIS             GP@P6
         TGET  (1),(0),R      READ TERMINAL INPUT                 GP@P6
         LR    R5,R1          COPY THE INPUT LENGTH               GP@P6
         CH    R15,=H'12'     IS INPUT LONGER THAN BUFFER?         ICBC
         BNE   NOCLEAR        NO. CONTINUE.                        ICBC
         TCLEARQ INPUT        CLEAR THE QUEUE                      ICBC
NOCLEAR  OI    QFLAG1,QFLG1RSH   FLAG RESHOW REQUEST              GP@P6
         CLI   PFCODE,X'6E'      PA2?                             RNB13
         BE    TPUTSCRN          /YES - GO RESHOW SCREEN          RNB13
         CLI   PFCODE,X'6B'      PA3?  (TCAM GENERATED)           RNB13
         BE    TPUTSCRN          /YES - GO RESHOW SCREEN          RNB13
         NI    QFLAG1,255-QFLG1RSH      NOT RESHOW REQUEST        GP@P6
***********************************************************************
*                                                                     *
*   PLACE INPUT TEXT INTO SCREEN IMAGE                GP@P6 JUNE 2002 *
*                                                                     *
***********************************************************************
         L     R0,QDCBPRM4       POINT TO A COPY AREA
         L     R1,QDSCRPLN       GET SCREEN SIZE
         LA    R14,QDSCRTXT      POINT TO SCREEN TEXT
         LR    R15,R1            GET SCREEN SIZE
         MVCL  R0,R14            COPY PRE-INPUT SCREEN CONTENTS
         XC    QDTLINE,QDTLINE   CLEAR COMMAND ECHO FIELD
         LA    R4,PFREPLY        POINT TO INPUT BUFFER
NEWFIELD SLR   R1,R1             CLEAR FOR INSERT
         ICM   R1,3,1(R4)        CATER FOR UNLIKELY 14-BIT ADDRESS
         TM    1(R4),X'40'       14-BIT ADDRESS?
         BZ    BINADROK          YES, BUT THAT MEANS SCREEN > 4096 LOCS
         NI    1(R4),X'3F'       REMOVE 3270 "PARITY" BITS
         NI    2(R4),X'3F'       REMOVE 3270 "PARITY" BITS
         SLR   R1,R1             CLEAR FOR INSERT
         IC    R1,2(,R4)         LOAD SCREEN LOCATION OF FIELD
         SLL   R1,2
         ICM   R1,2,1(R4)
         SRL   R1,2
BINADROK CLI   0(R4),X'11'       LOOKING AT AN INPUT FIELD?
         BNE   CRSELCTN          NO, PROCESS CURSOR SELECTION
         LA    R4,3(,R4)         POINT PAST SBA ORDER
         SH    R5,=H'3'          GET DATA LENGTH SBA ORDER
         BNP   SELCHARS          INPUT ENDED WITH NULL FIELD
         LA    R1,QDSCRTXT(R1)   POINT TO INPUT AREA IN SCREEN IMAGE
INCHARLP CLI   0(R4),X'11'       FOUND NEXT SBA ORDER?
         BE    NEWFIELD          YES, IT IS A NEW INPUT FIELD
         MVC   0(1,R1),0(R4)     NO, COPY THE TYPED CHARACTER
         LA    R1,1(,R1)         POINT TO NEXT SCREEN LOCATION
         LA    R4,1(,R4)         POINT TO NEXT INPUT BYTE
         BCT   R5,INCHARLP       GO PROCESS NEXT INPUT BYTE
         B     SELCHARS          LAST FIELD NOW PROCESSED
***********************************************************************
*                                                                     *
*   PROCESS "POINT-AND-SHOOT"                     GP@P6 NOVEMBER 2002 *
*                                                                     *
***********************************************************************
*
*  CONTROL COMES HERE AFTER A 3270 BUFFER ADDRESS HAS BEEN DECODED
*  BUT THE BYTE BEFORE THE BUFFER ADDRESS WAS NOT AN SBA.  THIS
*  HAPPENS WHEN THE BYTE BEFORE THE BUFFER ADDRESS IS THE AID, AND
*  THE BUFFER ADDRESS IS THE CURSOR LOCATION.  WHEN THIS HAPPENS
*  "POINT-AND-SHOOT" PROCESSING IS PERFORMED.
*
*  "POINT-AND-SHOOT" OR "JUMP FROM LEADER DOTS" TAKES PLACE WHEN THE
*  CURSOR IS PLACED ON A LEADER DOT.  IN QUEUE (TO DATE) ALL LEADER
*  DOTS ARE IN THE SECOND SCREEN COLUMN FOLLOWING A FIELD ATTRIBUTE
*  BYTE IN THE FIRST SCREEN COLUMN.  THE MAIN INPUT AREAS ON THE FIRST
*  AND LAST SCREEN LINES DO NOT START AT THE LEFT EDGE OF THE SCREEN SO
*  THERE IS NO CHANCE OF GENERATING INPUT FOR EITHER OF THOSE FIELDS.
*
*  INTERNALLY, AN 'S' IS PLACED WHERE THE CURSOR WAS (AFTER THE
*  VALIDATION MENTIONED ABOVE) FOR SUBSEQUENT PROCESSING.
*
*  NOTE THAT THIS TAKES PLACE BEFORE THE PROCESSING OF TYPED-IN INPUT
*  AND SO IT CAN BE OVERLAID BY TEXT TYPED IN INCLUDING A BLANK, BUT
*  EXCLUDING A DELETE OR FIELD ERASURE.
*
CRSELCTN TM    QFLAG2,QFLG2PNS   IS "POINT-AND-SHOOT" GENNED?
         BNO   PNSDONE           NO, SUPPRESS IT
         BCTR  R1,0              GET LOCATION OF PREVIOUS BYTE
         LA    R4,QDSCRTXT(R1)   POINT TO THIS PREVIOUS BYTE
         CLI   0(R4),X'0B'       SELECTION CODE ATTRIBUTE BYTE?
         BNE   PNSDONE           NO, CANNOT BE "POINT-AND-SHOOT"
         LH    R15,QDLNELEN      GET THE LINE LENGTH
         SLR   R0,R0             CLEAR FOR DIVIDE
         DR    R0,R15            GET RELATIVE LINE AND COLUMN
         LTR   R0,R0             WAS CURSOR IN COLUMN 2?
         BNZ   PNSDONE           NO, DO NOT SET JOB CLASS TO S
         MVI   1(R4),C'S'        YES, SET IMPLIED SELECTION CODE
         LA    R4,PFREPLY+3      POINT TO INPUT BUFFER
         SH    R5,=H'3'          GET DATA LENGTH AFTER HEADER
         BP    NEWFIELD          PROCESS INPUT FIELD
         B     SELCHARS          NO 3270 FIELDS SO PROCESS THIS 'S'
PNSDONE  LA    R4,PFREPLY+3      POINT TO INPUT BUFFER
         SH    R5,=H'3'          GET DATA LENGTH AFTER HEADER
         BP    NEWFIELD          PROCESS INPUT FIELD
         SLR   R1,R1             RESET TEXT LENGTH
         B     NULLTEXT          NO 3270 FIELDS WERE MODIFIED
***********************************************************************
*                                                                     *
*   PROCESS LINE SELECTION CODES                      GP@P6 JUNE 2002 *
*                                                                     *
***********************************************************************
SELCHARS L     R5,QDLINE1@       POINT TO FIRST DETAIL LINE
SELCHRLP CLI   0(R5),X'0B'       SELECTION CODE ATTRIBUTE BYTE?
         BNE   PRIMCMND          NO, NO MORE SELECTION CODES ON SCREEN
         LA    R1,1(,R5)         POINT TO ACTION/SELECTION CODE
         CLI   1(R5),C'.'        SELECTION CODE TYPED HERE?
         BH    DOACTION          YES
CHKJBCLS CLI   10(R5),X'0B'      JOB CLASS CHANGE ALLOWED?
         BNE   NEXTSELN          NO, CANNOT HAVE BEEN UPDATED
         CLI   11(R5),C'.'       CLASS JUST BLANKED OUT?
         BNH   NEXTSELN          YES
         OI    11(R5),X'40'      FOLD TEXT TO UPPER CASE
         LR    R1,R5             POINT TO DISPLAY LINE
         LA    R0,QDSCRTXT       POINT TO START OF SCREEN BUFFER
         SR    R1,R0             GET OFFSET
         A     R1,QDCBPRM4       POINT TO PRE-INPUT SCREEN CONTENTS
         CLC   11(1,R5),11(R1)   ANY CHANGE?
         BE    NEXTSELN          NO
         LA    R1,11(,R5)        YES, POINT TO NEW TEXT
         CLI   0(R1),C'A'        VALIDATE CLASS
         BL    BADCOMND
         CLI   0(R1),C'9'
         BH    BADCOMND          HOW WAS THAT DONE?
         CLI   0(R1),C'0'
         BNL   GOODCLS
         MVC   80(1,R13),0(R1)
         NI    80(R13),X'0F'
         CLI   80(R13),0
         BE    BADCOMND          PROBABLY BRACE OR BACKSLASH
         CLI   80(R13),9
         BH    BADCOMND
         CLI   0(R1),X'E1'       FOR COMPLETENESS...
         BE    BADCOMND
GOODCLS  MVC   OSCMDTXT,=CL16'$TJ0000,C=?'
         MVC   OSCMDTXT+10(1),0(R1)
         OC    OSCMDTXT+3(4),34(R5)
         MODESET MODE=SUP,KEY=ZERO
         LA    R1,OSCMDLEN       POINT TO SYSTEM COMMAND
         SLR   R0,R0             PRETEND TO BE MASTER CONSOLE
         SVC   34                ISSUE OS COMMAND
         MODESET MODE=PROB,KEY=NZERO
NEXTSELN AH    R5,QDLNELEN       POINT TO NEXT DISPLAY LINE
         B     SELCHRLP          GO CHECK IT FOR A SELECTION CODE
DOACTION OI    0(R1),X'40'       FOLD TEXT TO UPPER CASE
         CLI   QDISPTYP,QDJQ     JQE/JOE DISPLAY?
         BE    DOACTNJQ          YES
         CLI   QDISPTYP,QDDD     FILE DISPLAY?
         BE    DOACTNDD          YES
         CLI   QDISPTYP,QDDC     ACTIVE ADDRESS SPACE DISPLAY?
         BE    DOACTNDC          YES
         CLI   QDISPTYP,QDXI     INITIATOR/TERMINATOR DISPLAY?
         BE    DOACTNXI          YES
BADCOMND LA    R0,QDSCRTXT       POINT TO START OF SCREEN TEXT
         SR    R1,R0             GET OFFSET OF PROBLEM INPUT
         A     R1,QDSHADO@       POINT TO ITS SHADOW
         MVI   0(R1),X'22'       HIGHLIGHT IN REVERSE VIDEO RED
         B     WRTSCR            GO SHOW THE UPDATED SCREEN IMAGE
DOACTNDC LA    R14,23(,R5)       POINT TO "DC" JOB NUMBER
         LA    R7,13(,R5)        POINT TO "DC" JOB NAME
         CLI   0(R1),C'C'        CANCEL JOB?
         BNE   DOACTCMD          NO, BRANCH TO COMMON CODE
         MVC   OSCMDTXT,QBLANK   YES, CLEAR RESIDUAL DATA
         MVC   OSCMDTXT(4),=C'C U='
         MVC   OSCMDTXT+4(8),13(R5)
         CLI   23(R5),C'2'       REALLY A TSO USER?
         BE    AUTHCHEK          YES, GO VERIFY AUTHORITY
         MVC   OSCMDTXT+2(10),OSCMDTXT+4
         B     AUTHCHEK          GO VERIFY AUTHORITY
DOACTNJQ LA    R14,33(,R5)       NO, POINT TO "ST" JOB NUMBER
         LA    R7,22(,R5)        POINT TO "ST" JOB NAME
DOACTCMD CLI   0(R1),C'A'        RELEASE JOB?
         BE    JQJOBCMD          YES
         CLI   0(R1),C'H'        HOLD JOB?
         BE    JQJOBCMD          YES
         CLI   0(R1),C'C'        CANCEL JOB?
         BE    JQJOBCMD          YES
         CLI   0(R1),C'P'        PURGE JOB?
         BE    PURGECHK          YES
         LA    R15,=C'DD'
         CLI   0(R1),C'D'        DISPLAY DATA SETS?
         BE    JQSUBCMD          YES
         LA    R15,=C'SL'
         CLI   0(R1),C'S'        DISPLAY DATA SET CONTENTS?
         BE    JQSUBCMD          YES
         LA    R15,=C'JL'
         CLI   0(R1),C'L'        SHOW JOB LOG?
         BE    JQSUBCMD          YES
         LA    R15,=C'JC'
         CLI   0(R1),C'J'        SHOW JCL?
         BE    JQSUBCMD          YES
         LA    R15,=C'JM'
         CLI   0(R1),C'M'        SHOW JOB MESSAGES?
         BNE   BADCOMND          NO, INVALID
JQSUBCMD MVC   QDTLINE(2),0(R15) LOAD SUBCOMMAND NAME
         MVC   QDTLINE+3(5),0(R14)    JOB NUMBER
         CLI   0(R15),C'S'       SLOG COMMAND?
         BNE   GOTOLVL1          NO, CONTINUE
         CLI   0(R14),C'1'       STARTED TASK JOB NUMBER?
         BNE   GOTOJLOG          NO, CANNOT BE SYSLOG
         CLC   =CL8'SYSLOG',0(R7)
         BE    GOTOLVL1          IS SYSLOG SO SLOG IS GOOD
GOTOJLOG MVC   QDTLINE(2),=C'JL' LOAD SUBCOMMAND NAME
GOTOLVL1 MVC   PF3CMD1,QSUBNAME  SAVE CURRENT SUBCOMMAND NAME
         MVC   QPARM1SV,QPARM1   SAVE CURRENT SUBCOMMAND OPERAND
         MVI   PF3LEVEL+1,1      INCREMENT "PF3 LEVEL"
         OI    QFLAG1,QFLG1SEL   INHIBIT RESET OF "PF3 LEVEL"
         B     PRIMCMND          GO PARSE "PRIMARY INPUT"
PURGECHK CLI   4(R5),C'H'        HELD OUTPUT?
         BE    DODELETE          YES
         CLI   4(R5),C'X'        JOB ON EXECUTE QUEUE?
         BNE   JQJOBCMD          NO
         MVC   OSCMDTXT,=CL16'$CJ0000,P'
         B     JQGOTCMD
DODELETE MVC   OSCMDTXT,=CL16'$OJ0000,C'
         B     JQGOTCMD
JQJOBCMD MVC   OSCMDTXT,=CL16'$?J0000  '
         MVC   OSCMDTXT+1(1),0(R1)
JQGOTCMD TM    0(R14),X'03'      IS CATEGORY BATCH JOB?
         BZ    JQGOTJOB          YES, PRIMED 'J' IS CORRECT
         SLR   R15,R15
         IC    R15,0(,R14)       LOAD FIRST POSSIBLE JOB NUMBER DIGIT
         LA    R0,C'1'-C'S'      1->S (STC)    2->T (TSU)
         SR    R15,R0
         STC   R15,OSCMDTXT+2    SET STARTED TASK OR TSO CATEGORY
JQGOTJOB OC    OSCMDTXT+3(4),1(R14)  SET JOB NUMBER
AUTHCHEK TM    QFLAG1,QFLG1APF   APF AUTHORIZED?
         BNO   BADCOMND          YES
         TM    QFLAG1,QFLG1OPR   GOT OPERATOR AUTHORITY?
         BO    ISSUECMD          YES, ALLOWED TO FIDDLE WITH ANY JOB
         LA    R15,QLOGON        POINT TO USER ID
         LA    R14,13(,R5)       POINT TO "DC" JOB NAME
         CLI   QDISPTYP,QDDC     GOT THE RIGHT DISPLAY?
         BE    JOBCHKLP          YES
         LA    R14,22(,R5)       NO, POINT TO "ST" JOB NAME
JOBCHKLP CLI   0(R15),C' '       END OF LOGON ID?
         BNH   ISSUECMD          YES, GOT A MATCH
         CLC   0(1,R14),0(R15)   JOBNAME STARTS WITH USERID?
         BNE   BADCOMND          NO, INVALID
         LA    R14,1(,R14)
         LA    R15,1(,R15)
         B     JOBCHKLP
DOACTNDD CLI   0(R1),C'S'        SELECT DATA SET?
         BNE   BADCOMND          NO, INVALID
         MVC   QDTLINE(4),=CL4'L * '
         MVC   QDTLINE+4(4),28(R5)
         CLI   PF3LEVEL+1,0      WAS 'DD' A "LEVEL 0" COMMAND?
         BE    GOTOLVL1          YES, GO SET "LEVEL 1"
         MVI   PF3LEVEL+1,2      NO, IT WAS "LEVEL 1" SO SET "LEVEL 2"
         OI    QFLAG1,QFLG1SEL   INHIBIT RESET OF "PF3 LEVEL"
         B     PRIMCMND          GO PARSE "PRIMARY INPUT"
DOACTNXI CLI   0(R1),C'S'        START AN INITIATOR/TERMINATOR?
         BE    INITACTN          YES
         CLI   0(R1),C'P'        DRAIN AN INITIATOR/TERMINATOR?
         BE    INITACTN          YES
         CLI   0(R1),C'Z'        HALT AN INITIATOR/TERMINATOR?
         BNE   BADCOMND          NO, INVALID
INITACTN MVC   OSCMDTXT,=CL16'$?I??'
         MVC   OSCMDTXT+1(1),0(R1)
         MVC   OSCMDTXT+3(2),5(R5)
         CLI   OSCMDTXT+3,C' '   LEADING BLANK IN INITIATOR NAME?
         BNE   ISSUECMD          NO
         MVC   OSCMDTXT+3(2),OSCMDTXT+4
ISSUECMD MODESET MODE=SUP,KEY=ZERO
         LA    R1,OSCMDLEN       POINT TO SYSTEM COMMAND
         SLR   R0,R0             PRETEND TO BE MASTER CONSOLE
         SVC   34                ISSUE OS COMMAND
         MODESET MODE=PROB,KEY=NZERO
         B     CHKJBCLS          DONE LINE UNLESS NEW JOB CLASS
*   FROM HERE ON R1 HAS THE TEXT LENGTH OF EITHER 0 OR 63
PRIMCMND LA    R1,63             ASSUME COMMAND TEXT IS PRESENT
NULLTEXT LA    R4,QDSCRTXT       POINT TO SCREEN IMAGE BUFFER
         A     R4,QDSCRPLN       POINT PAST SCREEN IMAGE BUFFER
         SH    R4,QDLNELEN       POINT TO LAST SCREEN LINE
         MVC   PFTXT,QDTLINE     COPY TOP LINE INPUT
         OC    PFTXT,QBLANK      FOLD ANY TOP LINE INPUT TO UPPER CASE
         CLC   PFTXT,QBLANK      ANY TOP LINE INPUT?
         BNE   DOPFCODE          YES, HAVE PRIMARY COMMAND
         MVC   PFTXT,8(R4)       NO, COPY BOTTOM LINE INPUT
         OC    PFTXT,QBLANK      FOLD BOTTOM LINE INPUT TO UPPER CASE
DOPFCODE XC    8(63,R4),8(R4)    RESET BOTTOM LINE INPUT
         L     R4,QDCBPRM4       POINT TO SCREEN CONTENTS SAVE AREA
         MVC   QDTLINE,16(R4)    RESTORE COMMAND ECHO FIELD
*   END OF REVISED INPUT DATA STREAM PROCESSING       GP@P6 JUNE 2002 *
         CLI   PFCODE,X'F0'      TEST-REQ/SYS-REQ?                RNB13
         BE    ENTKEY            /YES - TREAT AS ENTER            RNB13
         CLI   PFCODE,X'01'      OTHER KIND OF SYS-REQ?           RNB13
         BE    ENTKEY            /YES - TREAT AS ENTER            RNB13
         IC    R4,PFCODE                                           ICBC
         LA    R0,X'0F'                                      GP@P6 ICBC
         NR    R4,R0             EXTRACT PF-KEY NUMBER       GP@P6 ICBC
         CH    R4,=H'12'                                           ICBC
         BH    ENTKEY           "ENTER" KEY                        ICBC
         ICM   R0,3,QPDSID       LOOKING AT A DATA SET?           GP@P6
         BNZ   PF8OKAY           YES, LEAVE PF8/20 AS IS          GP@P6
         CH    R4,=H'8'          PF8/20?                          GP@P6
         BE    ENTKEY            YES, ALLOW "SCROLL DOWN" REQUEST GP@P6
PF8OKAY  CH    R4,=H'3'          PF3/15?                          GP@P6
         BNE   PF3OKAY           NO, GO INSERT PFK MEANING        GP@P6
         TM    QFLAG1,QFLG1HLP   IN HELP PROCESSING?              GP@P6
         BNO   PF3HLPOK          NO, GO CHECK "PF3 LEVEL"         GP@P6
         LA    R1,63             INPUT TEXT WILL BE PRESENT       GP@P6
         MVC   QDREPLY,QBLANK    CLEAR RESIDUAL DATA              GP@P6
         MVC   QDREPLY(3),=C'+ 0'                                 GP@P6
         B     NOTXT             GO PROCESS "OUTER" COMMAND       GP@P6
PF3HLPOK CLI   PF3LEVEL+1,0      DOES PF3 MEAN END?               GP@P6
         BE    PF3OKAY           YES, GO INSERT PFK MEANING       GP@P6
         LA    R1,63             INPUT TEXT WILL BE PRESENT       GP@P6
         MVC   QDREPLY,QBLANK    CLEAR RESIDUAL DATA              GP@P6
         MVC   QDREPLY(2),=C'DD' PREPARE FOR "SECOND LEVEL"       GP@P6
         LH    R0,PF3LEVEL       GET CURRENT "PF3 LEVEL"          GP@P6
         BCT   R0,NEWLEVEL       DECREMENT LEVEL                  GP@P6
         MVC   QDREPLY(2),PF3CMD1 REALLY WAS "FIRST LEVEL"        GP@P6
         MVC   QDREPLY+3(8),QPARM1SV                              GP@P6
NEWLEVEL OI    QFLAG1,QFLG1SEL   INHIBIT RESET OF "PF3 LEVEL"     GP@P6
         STH   R0,PF3LEVEL       SAVE NEW "PF3 LEVEL"             GP@P6
         B     NOTXT             GO PROCESS "OUTER" COMMAND       GP@P6
PF3OKAY  BCTR  R4,0                                                ICBC
         MH    R4,=H'5'                                            ICBC
         LA    R5,PFKTAB                                           ICBC
         LA    R5,0(R4,R5)                                         ICBC
         MVC   QDREPLY(5),0(R5)  MOVE PF-KEY VALUE                 ICBC
         LA    R5,5                                                ICBC
         LA    R6,3(,R6)                                           ICBC
         LTR   R1,R1             ANY TEXT ACTUALLY TYPED IN?      GP@P6
         LA    R1,63             INPUT TEXT IS NOW PRESENT        GP@P6
         BNP   NOTXT             NO, LEAVE WHOLE PFK COMMAND      RNB14
         MVC   0(60,R6),PFTXT    YES, OVERLAY 2 PFK-SUPPLIED CHRS RNB14
         B     NOTXT                                              RNB14
ENTKEY   EQU   *                                                   ICBC
         MVC   0(63,R6),PFTXT                                     RNB14
NOTXT    STH   R1,QDRLNG      STORE LENGTH OF REPLY                ICBC
.PFK2    ANOP                                                      ICBC
         OC    QDREPLY,QBLANK     UPPERCASE THE COMMAND            FCI*
         CLC   QDREPLY(2),=CL2'PR' POSSIBLE PRINT COMMAND?     PWF FCI*
         BNE   CLSCRN             NOPE..SPLIT NORMALLY             FCI*
         CLI   QDREPLY+2,C' '      POSSIBLE PRINT COMMAND?   2003-03-04
         BE    DOPRINT            YES                        2003-03-04
         CLI   QDREPLY+2,C'I'      POSSIBLE PRINT COMMAND?   2003-03-04
         BNE   CLSCRN             NOPE..SPLIT NORMALLY       2003-03-04
DOPRINT  EQU   *                                             2003-03-04
         L     R15,=V(PRINT)  FETCH PRINT ENTRY ADDRESS            FCI*
         BALR  R14,R15        AND CALL HIM                         FCI*
         LTR   R15,R15        HOW IS HIS RETURN CODE               FCI*
         BNZ   CLSCRN         NOTHING TO REPORT                    FCI*
*                                                                  FCI*
         B     WRTSCR         GO REBUILD AND REPOST SCREEN   GP@P6 FCI*
CLSCRN   L     R4,QDLINE1@    LOAD ADDRESS OF FIRST LINE     GP@P6 FCI*
         L     R5,QDSCRLEN    LOAD LENGTH OF SCREEN AREA    GP@P6 UF003
         SR    R6,R6          NO SENDING FIELD NEEDED              FCI*
         STH   R6,QDNEXT      STORE ZERO IN LINE NUMBER            FCI*
         SR    R7,R7          FILL SCREEN WITH NULLS               FCI*
         MVCL  R4,R6          CLEAR THE SCREEN                     FCI*
*
         L     R4,QDSHADO@    POINT TO THE SHADOW BUFFER          GP@P6
         AH    R4,QDLNELEN    POINT TO HEADING LINE SHADOW        GP@P6
         AH    R4,QDLNELEN    POINT TO THE DETAIL SHADOW          GP@P6
         L     R5,QDSCRLEN    LOAD LENGTH OF SCREEN AREA          GP@P6
         LA    R7,X'05'       RESET TO UNHIGHLIGHTED TURQUOISE    GP@P6
         SLL   R7,24          PROMOTE CODE TO PAD BYTE            GP@P6
         MVCL  R4,R6          CLEAR THE SHADOW                    GP@P6
*
         LH    R1,QDRLNG      STORE LENGTH OF REPLY
         LTR   R1,R1          WAS THERE A RESPONSE FROM USER?
         BNZ   INTER          YES. INTERRUPT PROCESSING.
         MVI   QDOVER,1       INDICATE PAGE OVERFLOW
         B     DSP2           CONTINUE PROCESSING
INTER    L     R13,QFRSTSA    GO BACK TO MAIN MODULE
         LM    R14,R12,12(R13) RESTORE REGISTERS FROM FIRST SAVEAREA
         BR    R10            ADDRESS OF INTERRUPT HANDLER IN QUEUE
***********************************************************************
*                                                                     *
*   MISCELLANY                                                        *
*                                                                     *
***********************************************************************
         LTORG
         AIF  (NOT &QPFK).PFK3                                     ICBC
* PF-KEY DEFINITIONS                                               ICBC
PFKTAB   DS    0CL60                                               ICBC
PF1      DC    CL5'H'                                              ICBC
PF2      DC    CL5'DA'                                       FCI*  ICBC
PF3      DC    CL5'E'                                              ICBC
PF4      DC    CL5'PRINT'                                    FCI*  ICBC
PF5      DC    CL5'F'                                              ICBC
PF6      DC    CL5'DI'                                             ICBC
*        AIF   (&QRNB).RNB15A                                     RNB15
*F7      DC    CL5'PB'                                            UF003
*F8      DC    CL5'PF'                                            UF003
*        AGO   .RNB15B                                            RNB15
*RNB15A  ANOP                                                     RNB15
PF7      DC    CL5'-  P '          USE SPF-LIKE SCROLLING  GP/MAH RNB15
PF8      DC    CL5'+  P '          USE SPF-LIKE SCROLLING  GP/MAH RNB15
*RNB15B  ANOP                                                     RNB15
PF9      DC    CL5'DO'                                             ICBC
PF10     DC    CL5'CO 1'                                           ICBC
PF11     DC    CL5'CO 41'                                          ICBC
PF12     DC    CL5'ST'                                             ICBC
OSCMDLEN DC    0F'0',H'20',H'0'                                   GP@P6
OSCMDTXT DC    CL16' '                                            GP@P6
SBATABLE DC    17X'00',X'11',238X'00'                             GP@P6
.PFK3    ANOP                                                      ICBC
SYMDEL   DSECT ,                   KILL SYM CARD GENERATION       UF023
         QCOMMON
SYMNODEL DSECT ,                   RESTORE SYM CARD GENERATION    UF023
         END
