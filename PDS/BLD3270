BLD3270  QSTART 'QUEUE COMMAND - BUILD 3270 DATA STREAM'
***********************************************************************
*                                                                     *
*   WRITTEN BY GREG PRICE OF PRYCROFT SIX PTY LTD IN JUNE 2002.       *
*                                                                     *
*   THE PURPOSE OF THIS ROUTINE IS TO BUILD A 3270 DATA STREAM FROM   *
*   THE DISPLAY BUFFER AND ITS SHADOW BUFFER.  THE BUFFERS CONTAIN    *
*   ONE BYTE EACH PERTAINING TO EACH SCREEN LOCATION.                 *
*                                                                     *
*   THE PRIMARY BUFFER CONTAINS THE TEXT TO BE SHOWN ON THE SCREEN    *
*   PLUS INTERNAL CODES FOR EACH FIELD ATTRIBUTE BYTE.                *
*                                                                     *
*   THE SHADOW BUFFER CONTAINS INTERNAL CODES FOR THE CHARACTER       *
*   ATTRIBUTES OF THE DISPLAYABLE TEXT.  IT IS DATA FROM THE SHADOW   *
*   BUFFER THAT CAUSES 3270 EXTENDED DATA STREAM ORDERS TO BE         *
*   GENERATED.  TO REMOVE 3270 EDS ORDERS FROM THE GENERATED OUTPUT   *
*   ONE SIMPLY HAS TO IGNORE THE SHADOW BUFFER IN THIS ROUTINE        *
*   WITHOUT CHANGING ANY OTHER QUEUE COMMAND SUBROUTINE.              *
*                                                                     *
*   THE ONLY EDS ORDER THAT CAN BE GENERATED HERE IS SET ATTRIBUTE    *
*   (SA) AND ONLY COLOUR AND EXTENDED HIGHLIGHTING ARE USED.          *
*                                                                     *
*   APL CHARACTERS AND/OR GRAPHIC ESCAPE ORDERS ARE NOT USED.         *
*                                                                     *
*   START FIELD EXTENDED (SFE) CANNOT BE USED BECAUSE THE TSO/VTAM    *
*   SHIPPED IN THE AVAILABLE MVS 3.8J DISTRIBUTION DOES NOT SUPPORT   *
*   A 'NOEDIT' TPUT.  A 'FULLSCR' TPUT WILL NOT TRANSMIT THE SFE      *
*   ATTRIBUTE PAIR COUNT UNALTERED, THUS CORRUPTING THE DATA STREAM.  *
*                                                                     *
*   THE SHADOW BUFFER BYTE CORRESPONDING TO A FIELD ATTRIBUTE BYTE    *
*   IS IGNORED.                                                       *
*                                                                     *
*   A NULL IN THE SHADOW BUFFER RESETS EXTENDED HIGHLIGHTING.         *
*                                                                     *
*   FIELD ATTRIBUTE INTERNAL CODES ARE:                               *
*         0A - UNPROTECTED, LOW INTENSITY                             *
*         0B - UNPROTECTED, HIGH INTENSITY                            *
*         0C - PROTECTED, LOW INTENSITY                               *
*         0D - PROTECTED, HIGH INTENSITY                              *
*         0D - PROTECTED, HIGH INTENSITY                              *
*         0E - UNPROTECTED, INVISIBLE                                 *
*         0F - PROTECTED, INVISIBLE                                   *
*                                                                     *
*   CHARACTER ATTRIBUTE INTERNAL CODES ARE OF THE FORM YZ             *
*   WHERE THE VALUES OF Y ARE:                                        *
*          0 - NO EXTENDED HIGHLIGHTING                               *
*          1 - BLINKING                                               *
*          2 - REVERSE VIDEO                                          *
*          3 - UNDERSCORE                                             *
*   AND THE VALUES OF Z ARE:                                          *
*          1 - BLUE                                                   *
*          2 - RED                                                    *
*          3 - PINK                                                   *
*          4 - GREEN                                                  *
*          5 - TURQUOISE                                              *
*          6 - YELLOW                                                 *
*          7 - WHITE                                                  *
*                                                                     *
***********************************************************************
         USING WORK,R13            WORKING STORAGE
         L     R10,QVDSPL          ADDR OF DISPLAY WORK AREA
         USING QDISPLAY,R10        BASE REG FOR DISPLAY WORK AREA
***********************************************************************
*                                                                     *
*   LOCATE BUFFERS AND COPY "HEADER"                                  *
*                                                                     *
***********************************************************************
         LA    R2,QDSCREEN         POINT TO SOURCE
         L     R4,QDCBPRM3         POINT TO TARGET
         MVC   0(6,R4),0(R2)       COPY DATA STREAM "HEADER"
         LA    R4,6(,R4)           ADJUST TARGET POINTER
         LA    R2,QDSCRTXT         POINT TO PRIMARY BUFFER
         L     R3,QDSHADO@         POINT TO SHADOW BUFFER
         L     R9,QDSCRPLN         GET BYTES TO PROCESS
         MVI   CRNTHLIT,0          RESET HIGHLIGHT STATUS
         MVI   CRNTCOLR,0          RESET COLOUR STATUS
         MVI   CRNTCODE,0          RESET INTERNAL CODE "CACHE"
         SLR   R1,R1               CLEAR FOR INSERT
***********************************************************************
*                                                                     *
*   LOOP THROUGH EACH SCREEN LOCATION                                 *
*                                                                     *
***********************************************************************
BLDLOOP  CLI   0(R2),X'0A'         FIELD ATTRIBUTE CODE?
         BL    SHADOCHK            NO
         CLI   0(R2),X'0F'         FIELD ATTRIBUTE CODE?
         BH    SHADOCHK            NO
         MVI   0(R4),X'1D'         YES, SUPPLY START FIELD
         LA    R4,1(,R4)           ADJUST POINTER
         IC    R1,0(,R2)           LOAD INTERNAL CODE
         LA    R15,SFCODES-10(R1)  POINT TO ATTRIBUTE BYTE TO LOAD
         MVC   0(1,R4),0(R15)      LOAD IT
         B     NEXTBYTE            THIS BUFFER LOCATION NOW PROCESSED
SHADOCHK TM    QFLAG2,QFLG2EDS     USING EXTENDED DATA STREAM ORDERS?
         BNO   COPYBYTE            NO, DO NOT REFERENCE SHADOW BUFFER
         CLC   CRNTCODE,0(R3)      SAME SHADOW CODE AS LAST TIME?
         BE    COPYBYTE            YES, A 'CACHE" HIT
         MVC   CRNTCODE,0(R3)      NO, COPY THE NEW VALUE
         UNPK  WORKCODE,CRNTCODE   GET NEW HIGHLIGHT SETTING
         NI    WORKCODE,X'03'      FOLD INTO VALID RANGE
         CLC   CRNTHLIT,WORKCODE   HAS IT CHANGED?
         BE    COLORCHK            NO
         MVC   CRNTHLIT,WORKCODE   YES, UPDATE IT
         MVI   0(R4),X'28'         SET ATTRIBUTE
         MVI   1(R4),X'41'         EXTENDED HIGHLIGHTING
         MVC   2(1,R4),CRNTHLIT    COPY INTERNAL CODE
         TR    2(1,R4),TABLHLIT    CONVERT TO 3270 ORDER CODE
         LA    R4,3(,R4)           POINT PAST SA ORDER
COLORCHK MVC   WORKCODE,CRNTCODE   GET NEW COLOUR SETTING
         NI    WORKCODE,X'07'      FOLD INTO VALID RANGE
         BZ    COPYBYTE            LEAVE COLOUR UNCHANGED IF NULL
         CLC   CRNTCOLR,WORKCODE   HAS IT CHANGED?
         BE    COPYBYTE            NO
         MVC   CRNTCOLR,WORKCODE   YES, UPDATE IT
         MVI   0(R4),X'28'         SET ATTRIBUTE
         MVI   1(R4),X'42'         EXTENDED COLOUR
         MVC   2(1,R4),CRNTCOLR    COPY INTERNAL CODE
         TR    2(1,R4),TABLCOLR    CONVERT TO 3270 ORDER CODE
         LA    R4,3(,R4)           POINT PAST SA ORDER
COPYBYTE MVC   0(1,R4),0(R2)       COPY TEXT BYTE
NEXTBYTE LA    R4,1(,R4)           POINT PAST COPIED BYTE
         LA    R3,1(,R3)           POINT TO NEXT SHADOW BUFFER BYTE
         LA    R2,1(,R2)           POINT TO NEXT PRIMARY BUFFER BYTE
         BCT   R9,BLDLOOP          GO PROCESS NEXT SCREEN BYTE
***********************************************************************
*                                                                     *
*   APPEND ORDER TO PLACE CURSOR                                      *
*                                                                     *
***********************************************************************
         MVI   0(R4),X'11'         SET BUFFER ADDRESS
         L     R1,QDSCRPLN         GET SCREEN SIZE
         SH    R1,QDLNELEN         GET OFFSET OF LAST LINE
         LA    R1,8(,R1)           GET OFFSET OF INPUT AREA
         STCM  R1,3,1(R4)          SAVE 14-BIT ADDRESS
         TM    1(R4),X'F0'         PAST LOCATION 4095?
         BNZ   CSRADROK            YES, USE 14-BIT ADDRESS, NOT 12-BIT
         SRL   R1,6                GET HIGH-ORDER SIX BITS
         STC   R1,1(,R4)           SAVE HIGH SIX BITS
         NI    2(R4),X'3F'         GET LOW SIX BITS
         TR    1(2,R4),TABLADDR    CONVERT TO 3270 12-BIT ADDRESS CODE
CSRADROK MVI   3(R4),X'13'         INSERT CURSOR
         LA    R4,4(,R4)           POINT PAST END OF DATA STREAM
***********************************************************************
*                                                                     *
*   CALL CB3270 TO REDUCE DATA STREAM LENGTH WITH 3270 COMPRESSION    *
*                                                                     *
***********************************************************************
         S     R4,QDCBPRM3         GET THE DATA STREAM LENGTH
         ST    R4,QDLENGTH         SAVE IT
         LA    R1,QDCBPRM1         POINT TO PARAMETER LIST
         L     R15,=V(CB3270)      GET COMPRESSION ROUTINE ENTRY POINT
         BALR  R14,R15             COMPRESS IN PLACE - QDLENGTH UPDATED
***********************************************************************
*                                                                     *
*   RETURN TO CALLER                                                  *
*                                                                     *
***********************************************************************
         QSTOP
***********************************************************************
*                                                                     *
*   MISCELLANY                                                        *
*                                                                     *
***********************************************************************
         LTORG
TABLADDR DC    X'40C1C2C3C4C5C6C7C8C94A4B4C4D4E4F'
         DC    X'50D1D2D3D4D5D6D7D8D95A5B5C5D5E5F'
         DC    X'6061E2E3E4E5E6E7E8E96A6B6C6D6E6F'
         DC    X'F0F1F2F3F4F5F6F7F8F97A7B7C7D7E7F'
TABLHLIT DC    X'00F1F2F4'         NORMAL, BLINK, REVERSE, UNDERSCORE
TABLCOLR DC    X'00F1F2F3F4F5F6F7' ZAP THIS TO PREFERRED COLOUR SCHEME
SFCODES  DC    X'40C860E84C7C'     NO AUTOSKIP          22NOV2002 GP@P6
SYMDEL   DSECT ,                   KILL SYM CARD GENERATION       UF023
         QCOMMON
WORK     DSECT
         DS    CL80
CRNTHLIT DS    X
CRNTCOLR DS    X
CRNTCODE DS    X
WORKCODE DS    X
SYMNODEL DSECT ,                   RESTORE SYM CARD GENERATION    UF023
         END
