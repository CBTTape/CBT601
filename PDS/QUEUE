QUEUE    QSTART 'QUEUE COMMAND - MAINLINE MODULE',MAIN=YES
***********************************************************************
* RNB CHANGES:                                                        *
*      (1) RNB01 - FIX FINAL TPUT MESSAGE TO WORK WITH SPF TCAM       *
*                                                                     *
***********************************************************************
***********************************************************************
*                                                                     *
*   CALL - INITIALIZATION                                             *
*                                                                     *
***********************************************************************
         L     R15,=V(INIT)   ADDR OF INIT
         BALR  R14,R15        GO TO IT
         LA    R10,LOOP       INTERRUPTED RETURN ADDRESS
         USING QDISPLAY,R9    BASE REG FOR DISPLAY WORK AREA
         L     R9,QVDSPL      LOAD BASE REG
         USING WORK,R13       BASE REG FOR LOCAL WORK AREA
******************************************************************UF003
*                                                                 UF003
*   INITIALIZE 3270 SCREEN VARIABLES                              UF003
*                                                                 UF003
******************************************************************UF003
         GTSIZE ,             READ 3270 SCREEN SIZE               UF003
         STM   R0,R1,QDOSZR0  SAVE FOR LATER RESTORE              UF003
         LTR   R0,R0          DISPLAY DEVICE?                     UF003
         BZ    NOTDISP        NO, ABORT                           UF003
         SPACE 1                                                  UF003
         STFSMODE ON,INITIAL=YES  TELL VTAM ABOUT FULLSCREEN MODE UF003
         SPACE 1                                                  UF003
         GTTERM PRMSZE=QDPRMSZ,ALTSZE=QDALTSZ,ATTRIB=QDATTRB,     GP@P6+
               TERMID=QDTRMID,MF=(E,QDGTRM)  GET VTAM DETAILS     GP@P6
         SPACE 1                                                  GP@P6
         LM    R0,R1,QDOSZR0  RESTORE DESTROYED REGS              UF003
         MVI   QDSCRO1,X'7E'  ERASE/WRITE ALTERNATE               UF003
         CLM   R0,1,QDPRMSZ   PRIMARY SIZE LINE COUNT?            GP@P6
         BNE   MODELOK        NO, USE ALTERNATE SIZE              GP@P6
         CLM   R1,1,QDPRMSZ+1 PRIMARY SIZE COLUMN COUNT?          GP@P6
         BNE   MODELOK        NO, USE ALTERNATE SIZE              GP@P6
*        STSIZE SIZE=80,LINE=24 2003-02-05 ALL STSIZES REMOVED BY GP@P6
         MVI   QDSCRO1,X'F5'  ERASE/WRITE FOR PRIMARY SIZE        UF003
         SPACE 1                                                  UF003
*              REDO MODEL CODE                       2002-06-16   GP@P6
MODELOK  STH   R1,QDLNELEN    LINE LENGTH                             *
         LA    R1,QDSCRTXT+80      POINT TO COLUMN 81      2003-02-14 *
         MVC   2(7,R1),=X'E4A2859989847E'      C'USERID='  2003-02-14 *
         MVC   9(8,R1),QLOGON      DISPLAY USERID          2003-02-14 *
         MVC   19(9,R1),=X'E3859994899581937E' C'TERMINAL='2003-02-14 *
         MVC   28(8,R1),QDTRMID    DISPLAY TERMINAL NAME   2003-02-14 *
         LR    R15,R0         GET SCREEN LINE COUNT                   *
         SH    R15,=H'3'      GET DETAIL DISPLAY LINE COUNT           *
         CVD   R15,CONVERT    MAKE DECIMAL                            *
         ZAP   QDLNES,CONVERT DETAIL LINE COUNT      2003-02-05       *
         MH    R0,QDLNELEN    GET SCREEN DISPLAY CHARACTER COUNT      *
         ST    R0,QDSCRPLN    LENGTH OF BUFFER WITH SHADOW BUFFER     *
         MH    R15,QDLNELEN   GET DISPLAY DETAIL CONTENT CAPACITY     *
         ST    R15,QDSCRLEN   LENGTH TO CLEAR FOR EACH DISPLAY        *
         LR    R15,R0         GET SCREEN BUFFER SIZE                  *
         SH    R15,QDLNELEN   GET CAPACITY LESS ONE SCREEN LINE       *
         LA    R1,QDSCRTXT(R15)                                       *
         MVC   0(7,R1),=C'REPLY -'                                    *
         MVI   7(R1),X'0B'    HIGH INTENSITY INPUT FIELD              *
         XC    8(63,R1),8(R1) CLEAR INPUT AREA                        *
         MVI   71(R1),X'0C'   LOW INTENSITY OUTPUT FIELD              *
         LA    R1,72(,R1)     POINT TO PLUS SIGN INDICATOR AREA       *
         ST    R1,QDPLUS@     SAVE ITS ADDRESS                        *
         LA    R1,QDSCRTXT    POINT TO FIRST SCREEN LINE              *
         AH    R1,QDLNELEN    POINT TO SECOND SCREEN LINE             *
         ST    R1,QDHLINE@    SAVE HEADING LINE ADDRESS               *
         AH    R1,QDLNELEN    POINT TO THIRD SCREEN LINE              *
         ST    R1,QDLINE1@    SAVE FIRST DATA LINE ADDRESS            *
         L     R1,QDSHADO@    POINT TO THE SHADOW AREA                *
         MVI   0(R1),X'07'    TOP LEFT TEXT IN WHITE                  *
         MVC   1(14,R1),0(R1)                                         *
         MVI   16(R1),X'02'   COMMAND ECHO IN RED                     *
         MVI   80(R1),X'06'   YELLOW USERID+TERMINAL       2003-02-14 *
         AR    R1,R15         POINT TO SHADOW OF LAST LINE            *
         MVI   0(R1),X'07'    PROMPT IN WHITE                         *
         MVC   1(6,R1),0(R1)                                          *
         MVI   8(R1),X'32'    INPUT AREA IN RED UNDERSCORE            *
         MVC   9(62,R1),8(R1)                                         *
         MVI   72(R1),X'07'   PLUS SIGN IN WHITE IF SHOWN             *
         MVI   73(R1),X'06'   PF3/15 MEANING IN YELLOW IF SHOWN       *
         MVC   74(6,R1),73(R1)                                        *
*       END OF REDO MODEL CODE                       2002-06-16   GP@P6
         SPACE 1                                                  UF003
         B     LOOP           GO TO PROCESS LOOP                  UF003
         SPACE 1                                                  UF003
NOTDISP  LA    R1,NOTDSPL     POINT TO MESSAGE TEXT               GP@P6
         LA    R0,L'NOTDSPL   SET MESSAGE LENGTH                  GP@P6
         TPUT  (1),(0),R      SEND MESSAGE TO USER                GP@P6
         B     EXIT2          AND RETURN TO CALLER                UF003
         SPACE 1                                                  UF003
NOTDSPL  DC    C'QUEUE COMMAND REQUIRES DISPLAY TERMINAL'         UF003
         EJECT ,                                                  UF003
***********************************************************************
*                                                                     *
*   CALL - COMMAND LINE PARSE                                         *
*                                                                     *
***********************************************************************
LOOP     DS    0H                                                 UF006
         L     R15,=V(PARSE)  ADDR OF PARSE
         BALR  R14,R15        GO TO IT
         CLC   =C'E ',QSUBNAME STOP?
         BE    EXIT           YES.
         CLC   =C'EXIT ',QSUBNAME STOP?
         BE    EXIT           YES.
         CLC   =C'END ',QSUBNAME STOP?
         BE    EXIT           YES.
         CLC   =C'STOP ',QSUBNAME STOP?
         BE    EXIT           YES.
***********************************************************************
*                                                                     *
*   CALL - SUB-COMMAND MODULE SELECTED BY PARSE                       *
*                                                                     *
***********************************************************************
         QHEAD DUMMY,X'26',DMY=Y   NO OUTPUT IN YELLOW REVERSE    GP@P6
         L     R15,QSUBCMD    ADDR OF SUBCMD FROM QCOMMON
         BALR  R14,R15        GO TO IT
         MVC   QDMLNG,=H'0'   ZERO OUT MESSAGE LENGTH
         L     R15,=V(DISPLAY) ADDR OF DISPLAY MODULE
         BALR  R14,R15        WRITE LAST SCREEN, GET NEXT INPUT
         B     LOOP           DO IT AGAIN
***********************************************************************
*                                                                     *
*   CLEAN UP AND GO HOME                                              *
*                                                                     *
***********************************************************************
EXIT     DS    0H             2003-02-05 - ALL STSIZES REMOVED BY GP@P6
*        STSIZE SIZELOC=QDOSZR1,LINELOC=QDOSZR0  RESTORE SCRSIZE  UF003
********                      2003-02-05 - REMOVE NEEDLESS TPUT   GP@P6
**       MVI   QDSCRO1,X'7E'  SET ERASE/WRITE ALTERNATE           GP@P6
**       CLI   QDOSZR0+3,24   MORE THAN 24 LINES?                 GP@P6
**       BH    EXITSZOK       YES, USER ALTERNATE SIZE            GP@P6
**       CLI   QDOSZR1+3,80   MORE THAN 80 COLUMNS?               GP@P6
**       BH    EXITSZOK       YES, USER ALTERNATE SIZE            GP@P6
**       MVI   QDSCRO1,X'F5'  SET ERASE/WRITE (PRIMARY)           GP@P6
**ITSZOK LA    R1,QDSCREEN    POINT TO DATA STREAM                GP@P6
**       LA    R0,3           GET LENGTH OF ESC,EW(A),WCC         GP@P6
**       ICM   R1,8,=X'03'    SET FLAGS FOR FULLSCR               GP@P6
**       TPUT  (1),(0),R      CLEAR AND RESET THE SCREEN          GP@P6
********                      2003-02-05 - REMOVE NEEDLESS TPUT   GP@P6
         STLINENO LINE=1,MODE=OFF                 OFF FULLSCR     UF003
         USING QCKPT,R8 BASE REG FOR CKPT WORK AREA
EXIT2    DS    0H                                                 UF003
         L     R8,QVCKPT      LOAD BASE REG
         CLOSE MF=(E,HOCKPT)
         CLOSE MF=(E,QCSPOOLS)
         TM    QPFLAG,HARDCPY         IS HARDCOPY INVOKED?         FCI*
         BNO   FREEUP                   NO..SPLIT THIS STUFF       FCI*
         L     R15,=V(PRINT)               INVOKE PRINT            FCI*
         MVC   QDREPLY,QBLANK                  TO                  FCI*
         MVC   QDREPLY(09),=C'PRINT OFF'          FREE UP          FCI*
         MVC   QDRLNG,=X'0009'                        HARDCOPY     FCI*
         BALR  R14,R15                                     OUTPUT  FCI*
         EJECT
***********************************************************************
*                                                                  FCI*
*   FREE HASPCKPT AND HASPACEN DDNAMES BEFORE LEAVING TO BE NEAT.. FCI*
*                                                                  FCI*
***********************************************************************
FREEUP   MVI   DAIRFLAG,X'18'    INDICATE FREE DDNAME(XXXXXXXX)    FCI*
         MVC   DA18DDN,HASPCKPT+40  GET DDNAME USED...             FCI*
         L     R15,=V(ALLOCATE)  GET ROUTINE NAME                  FCI*
         BALR  R14,R15           GO FREE IT..                      FCI*
*
         LA    R2,QCSPOOLS       GET ADDR OF LIST OF HASPACE DCBS  FCI*
         LA    R4,35             MAX OF 35 PASSES THROUGH HERE..   FCI*
FREEUP1  L     R3,0(R2)          GET ADDRESS OF DCB TO WORK ON     FCI*
         LTR   R3,R3             ANYONE THERE?                     FCI*
         BZ    EXITQCK                                             FCI*
         MVC   DA18DDN,40(R3)    MOVE IN DDNAME FROM DCB           FCI*
         L     R15,=V(ALLOCATE)  GET ROUTINE NAME                  FCI*
         BALR  R14,R15           AND GO INVOKE DAIR TO FREE IT..   FCI*
         LA    R2,4(R2)          BUMP                              FCI*
         BCT   R4,FREEUP1                                          FCI*
***********************************************************************
*                                                                     *
*   FREE THE AREAS ACQUIRED IN INIT (Q3)                              *
*                                                                     *
***********************************************************************
EXITQCK  OI    QGETL3,X'80'   PREPARE FOR FREEMAIN             PWF FCI*
         FREEMAIN MF=(E,QFREE)
         TM    QFLAG1,QFLG1DBC    NEED TO TERMINATE ESTAE?        UF024
         BZ    NOESTAE            NO, SKIP THIS                   UF024
         ESTAE 0                  DELETE CURRENT ESTAE            UF024
         NI    QFLAG1,255-QFLG1DBC  CLEAR FLAG                    UF024
NOESTAE  DS    0H                                                 UF024
         QSTOP MAIN=YES           ZERO THE RETURN CODE            GP@P6
***********************************************************************
*                                                                     *
*   CONSTANTS AND OTHER ODDITIES                                      *
*                                                                     *
***********************************************************************
         LTORG
CLEAR1   EQU   *                   START OF CLEAR DATA            UF003
*        DC    X'27F5C1'           ESC; ERASE/WRITE; RESET MDT    UF003
         DC    X'C1'               FIX FOR SPF/TCAM               RNB01
         DC    X'115D7E'           SBA  24,80                     UF003
         DC    X'114040'           SBA  1,1                       UF003
         DC    X'3C404000'         RTA  1,1 WITH NULLS            UF003
         DC    X'1DC8'             SF, INTENSIFIED                UF003
         DC    X'13'               INSERT CURSOR                  UF003
CLEAR    EQU   CLEAR1,*-CLEAR1                                    UF003
DUMMY    DC    CL80'    NO DATA IS AVAILABLE FOR YOUR REQUEST'
SYMDEL   DSECT ,                   KILL SYM CARD GENERATION       UF023
         QCOMMON
WORK     DSECT
         DS    CL72
CONVERT  DS    D
SYMNODEL DSECT ,                   RESTORE SYM CARD GENERATION    UF023
         END
