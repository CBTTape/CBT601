ACTIVE   QSTART 'QUEUE COMMAND - LIST ACTIVE JOB STATUS'
******************************************************************
* RNB CHANGES:                                                   *
*       (1) RNB07 - WHEN LISTING BATCH JOBS, SAY THEY            *
*                   ARE ON THE XEQ QUEUE INSTEAD OF INPUT QUEUE. *
*       (1) RNB26 - BUG FIX TO STOP LISTING A LOT OF STRANGE JOBS*
******************************************************************
         GBLB  &QSP           MVS/SP OPTION                       UF020
         GBLB  &QPFK          PF-KEY OPTION. DEFINED BY QSTART    GP@P6
         USING QCKPT,R9       BASE REG FOR CHECKPOINT AREA
         L     R9,QVCKPT      LOAD BASE REG
         USING WORK,R13       BASE REG FOR LOCAL WORK AREA
***********************************************************************
*                                                                     *
*        SET THE DISPLAY SELECTION CRITERIA       GP@P6/MAH JULY 2002 *
*                                                                     *
***********************************************************************
         MVI   DATYPE,X'00'   CLEAR DISPLAY TYPE INDICATOR
         LA    R8,QPARM1      R8 <- ADDRESS OF OPERAND
         LH    R7,QLNG1       R7 <- LENGTH OF OPERAND
         LTR   R7,R7          OPERAND SUPPLIED?
         BNZ   CHKJ           -> YES - CHECK IT
         OI    DATYPE,DAJ+DAS+DAT      INDICATE ALL REQUIRED
         B     CALLCKPT
CHKJ     CLI   0(R8),C'J'     ACTIVE JOBS?
         BE    ISJ            -> YES
         CLI   0(R8),C'B'     ACTIVE JOBS?
         BNE   CHKS           -> NO - CHECK STARTED TASKS
ISJ      OI    DATYPE,DAJ     SHOW ACTIVE JOBS REQUIRED
         B     CONT
CHKS     CLI   0(R8),C'S'     ACTIVE STARTED TASKS?
         BNE   CHKT           -> NO - CHECK TSS USERS
         OI    DATYPE,DAS     SHOW STARTED TASKS REQUIRED
         B     CONT
CHKT     CLI   0(R8),C'T'     ACTIVE TSS USERS?
         BNE   BADPARM        -> NO - BAD PARAMETER
         OI    DATYPE,DAT     SHOW ACTIVE TSS USERS REQUIRED
CONT     LA    R8,1(R8)
         BCT   R7,CHKJ
******************************************************************UF006
*                                                                 UF006
*   CALL - READ JES2 CHECKPOINT ROUTINE                           UF006
*                                                                 UF006
******************************************************************UF006
CALLCKPT L     R15,=V(CKPT)   ADDR OF CKPT ROUTINE                UF006
         BALR  R14,R15        GO TO IT                            UF006
         L     R8,16          POINT TO CVT
         USING CVTDSECT,R8
***********************************************************************
*                                                                     *
*        FIND THE ACTIVE MAIN SUBSYSTEM SSVT                          *
*                                                                     *
***********************************************************************
         L     R7,CVTASVT     POINT TO ASVT
         L     R2,CVTMSER     POINT TO ASVT
         USING ASVT,R7
         L     R7,ASVTMAXU    LOAD THE MAX ASCBS
         DROP  R7
         L     R8,CVTJESCT    POINT TO JESCT
         DROP  R8
         USING JESCT,R8
         L     R8,JESSSCT     POINT TO SSCT
         DROP  R8
         USING SSCT,R8
         L     R8,SSCTSSVT    POINT TO SSVT
         DROP  R8
         USING SSVT,R8
***********************************************************************
*                                                                     *
*        FIND THE ACTIVE MAIN SUBSYSTEM'S HAVT                        *
*                                                                     *
***********************************************************************
         L     R6,$SVHAVT     POINT TO HAVT
         LTR   R6,R6          TEST IF ANY PITS
         BZ    NOHAVT         NO, IGNORE COMMAND
         LA    R6,4(,R6)      POINT TO FIRST SJB POINTER
         USING SJBDSECT,R5
         QHEAD INITHD,X'24',TYP=QDDC   HEADING IN GREEN REVERSE   GP@P6
***********************************************************************
*                                                                     *
*        BUILD THE MESSAGE(S) DESCRIBING THE JOBS                     *
*                                                                     *
***********************************************************************
BLDMSG   MVC   QDMSG,QBLANK   BLANK THE AREA
         L     R5,0(,R6)      POINT TO SJB
         LTR   R5,R5          TEST FOR ANY
         BZ    NEXTSJB
         L     R4,SJBSJB      TEST FOR BATCH JOB
         LTR   R4,R4          IS IT
         BNZ   BATCHCHK
         L     R3,SJBJQOFF    LOAD JQE OFFSET
         LTR   R3,R3          ANY JQE?                            RNB26
         BZ    NEXTSJB        /NO  - TRY NEXT SJB                 RNB26
         AL    R3,QCJQTA      ADD TO JQE ORIGIN
         USING JQEDSECT,R3    BASE REG FOR JQE
         AIF   (&QSP).QSP1                                        UF020
         LH    R0,JQEJOBNO    GET JOB NO.
         CH    R0,=H'20000'   TSO USER?
         BNL   TSOCHK         YES. GO PROCESS
         B     STCCHK         NO. GO PROCESS AS STC
         AGO   .QSP2                                              UF020
.QSP1    ANOP                                                     UF020
         TM    JQEFLAG3,QUEJOB  BATCH JOB?  (SHOULDN'T BE)        RNB26
         BO    UNK              /YES - SAY UNKNOWN                RNB26
         TM    JQEFLAG3,QUETSU  TSO USER?                         UF020
         BO    TSOCHK         YES, GO PROCESS                     UF020
         TM    JQEFLAG3,QUESTC  STARTED TASK?                     UF020
         BO    STCCHK         YES, GO PROCESS                     UF020
UNK      MVC   QUEUE,=CL8'UNKNOWN'                                UF020
         B     NOTTSO         PRINT WHATEVER WE CAN FIND          UF020
.QSP2    ANOP                                                     UF020
BATCHCHK TM    DATYPE,DAJ     BATCH DISPLAY ?                    GP/MAH
         BNO   NEXTSJB        NO. GET NEXT SJB                   GP/MAH
         LR    R5,R4          COPY THE SJB ADDRESS
         L     R3,SJBJQOFF    POINT TO JQE OFFSET
         LTR   R3,R3          ANY JQE?                            RNB26
         BZ    NEXTSJB        /NO  - TRY NEXT SJB                 RNB26
         AL    R3,QCJQTA      POINT TO THE JQE
         IC    R0,JQETYPE     GET THE JOB TYPE
         MVC   QUEUE,=CL8'XEQ'                              GP@P6 RNB07
         STC   R0,QUEUE+7     SET THE QUEUE TYPE
         OI    QUEUE+7,X'80'  SET THE PRINTABLE QUEUE TYPE
         B     NOTTSO         GO TO COMMON ROUTINE
TSOCHK   TM    DATYPE,DAT     TSO DISPLAY ?                      GP/MAH
         BNO   NEXTSJB        NO. GET NEXT SJB                   GP/MAH
         MVC   QUEUE,=CL8'TSO USER'
         B     NOTTSO
STCCHK   TM    DATYPE,DAS     STC DISPLAY ?                      GP/MAH
         BNO   NEXTSJB        NO. GET NEXT SJB                   GP/MAH
         MVC   QUEUE,=CL8'SYSTEM Q'
NOTTSO   L     R1,SJBASCBP    POINT TO ASCB
         USING ASCB,R1
         LM    R14,R15,ASCBEJST GET THE CPU TIME
         SRDL  R14,12         SKIP THE GARBAGE
         D     R14,=F'10000'  GET THE VALUE IN .01 SECS
         CVD   R15,CONVERT    GET THE DECIMAL VALUE
         MVC   TCBTIME,EDCPU  MOVE EDIT MASK
         ED    TCBTIME,CONVERT+4 EDIT THE NUMBER
         MVI   TCBTIME+L'TCBTIME-1,C'S' SET SECONDS
         LM    R14,R15,ASCBSRBT GET THE CPU TIME
         SRDL  R14,12         SKIP THE GARBAGE
         D     R14,=F'10000'  GET THE VALUE IN .01 SECS
         CVD   R15,CONVERT    GET THE DECIMAL VALUE
         MVC   SRBTIME,EDCPU  MOVE EDIT MASK
         ED    SRBTIME,CONVERT+4 EDIT THE NUMBER
         MVI   SRBTIME+L'SRBTIME-1,C'S' SET SECONDS
         MVC   JOBNAME,SJBJOBNM MOVE IN JOBNAME
         LH    R14,JQEJOBNO   LOAD JOB NUMBER
         CVD   R14,CONVERT    GET THE DECIMAL VALUE
         MVC   JOBNUM,ED5     GET THE CHARACTER VALUE
         ED    JOBNUM,CONVERT+5 GET THE CHARACTER VALUE
         LR    R4,R2          COPY THE ADDRESS
FINDCSCB ICM   R4,15,0(R4)    POINT TO THE NEXT CSCB
         BZ    DONECSCB       NO MATCHING CSCB WAS FOUND          GP@P6
         USING CSCDSECT,R4
         CLC   CHKEY,JQEJNAME TEST FOR RIGHT JOB
         BNE   FINDCSCB       NOPE
         MVC   STEPNAME,CHSTEP MOVE IN STEPNAME
         MVC   PROCSTEP,CHPROCSN MOVE IN THE PROCSTEP NAME
         DROP  R4
DONECSCB L     R15,QVDSPL     POINT TO QUEUE DISPLAY VARIABLES    GP@P6
         USING QDISPLAY,R15   BASE REG FOR DISPLAY AREA           GP@P6
         LH    R0,ASCBFMCT    GET NUMBER OF FRAMES
         MVI   QDLNCODE,X'05' TURQUOISE FOR SWAPPED OUT           GP@P6
         SLA   R0,2           GET NUMBER OF K                     GP@P6
         BZ    SWPCLROK       ADDRESS SPACE IS SWAPPED OUT        GP@P6
         MVI   QDLNCODE,X'06' YELLOW FOR SWAPPED IN               GP@P6
SWPCLROK CVD   R0,CONVERT     GET THE DECIMAL VALUE
         MVC   SLOTS,ED5      MOVE EDIT MASK
         ED    SLOTS,CONVERT+5 GET THE K
         MVI   SLOTS+L'SLOTS-1,C'K' SET THE 'K'
         AIF   (NOT &QPFK).DCNOSEL                                GP@P6
         MVI   QDMSG,X'0B'    INPUT HIGH INTENSITY                GP@P6
         MVI   QDMSG+1,C'.'   SUPPLY LEADER DOT                   GP@P6
         MVI   QDMSG+2,X'0C'  OUTPUT LOW INTENSITY                GP@P6
.DCNOSEL ANOP                                                     GP@P6
         MVC   QDMLNG,=H'80'  SET THE LENGTH
         LA    R0,QDMSG       GET THE ADDRESS
         ST    R0,QDMSGA      SET THE ADDRESS
         DROP  R15                                                GP@P6
         L     R15,=V(DISPLAY) POINT TO THE ROUTINE
         BALR  R14,R15        CALL THE ROUTINE
***********************************************************************
*                                                                     *
*        SEND THE MESSAGE DESCRIBING THE PIT                          *
*                                                                     *
***********************************************************************
NEXTSJB  LA    R6,4(,R6)      POINT TO NEXT HAVT POINTER
         DROP  R1,R5
         BCT   R7,BLDMSG      TEST FOR NEXT HAVT POINTER
***********************************************************************
*                                                                     *
*        END IT ALL                                                   *
*                                                                     *
***********************************************************************
END      QSTOP
NOHAVT   QTILT '***** NO JOBS TO DISPLAY *****'
BADPARM  QTILT '***** INVALID OPERAND *****'                     GP/MAH
INITHD   DC    CL80'      QUEUE  JOBNAME   JOB#  STEPNAME PROCSTEP  FRA*
               MES    TCB-TIME    SRB-TIME'
ED5      DC    X'402020202120'
EDCPU    DC    X'4020206B2021204B2020'
         LTORG
***********************************************************************
*                                                                     *
*        DESCRIBE ALL THE DSECTS NEEDED BY THIS MODULE                *
*                                                                     *
***********************************************************************
SYMDEL   DSECT ,                   KILL SYM CARD GENERATION       UF023
ACTIVE   CSECT ,                                                  UF023
         $CVT
         $JESCT
         $SSCT
         $SVT
         $ASVT
         $ASCB
         $CSCB
         $DEB                                                     UF021
         $SJB
         $JQE
         QCOMMON
         ORG   QDMSG
         DS    CL4
QUEUE    DS    CL8
         DS    C
JOBNAME  DS    CL8
         DS    C
JOBNUM   DS    CL6
         DS    C
STEPNAME DS    CL8
         DS    C
PROCSTEP DS    CL8
         DS    C
SLOTS    DS    CL7
         DS    C
TCBTIME  DS    CL11
         DS    C
SRBTIME  DS    CL11
         DS    C
WORK     DSECT
         DS    CL80
CONVERT  DS    D
DATYPE   DS    X                   DISPLAY TYPE REQUIRED         GP/MAH
DAJ      EQU   X'01'                 ACTIVE JOBS                 GP/MAH
DAS      EQU   X'02'                 ACTIVE STARTED TASKS        GP/MAH
DAT      EQU   X'04'                 ACTIVE TSO USERS            GP/MAH
SYMNODEL DSECT ,                   RESTORE SYM CARD GENERATION    UF023
         END
